name: build resume

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify the Node.js version

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the project
      - name: Build the project
        run: npm run build

      # Cache dependencies for faster builds
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      # Checkout the code (needed to access build artifacts)
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js (to install dependencies and rebuild if necessary)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Build the project
      - name: Build the project
        run: npm run build

      - name: Update and install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl unzip

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Verify AWS CLI installation
        run: aws --version

      # Configure AWS CLI
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      # Upload to S3 using AWS CLI
      - name: Upload assets to S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }}/ --delete

      # Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      # Upload artifacts to S3
    #   - name: Upload to S3
    #     uses: jakejarvis/s3-sync-action@v0.5.1
    #     with:
    #       aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws_region: eu-west-2
    #       source_dir: assets/
    #       destination_bucket: ${{ secrets.S3_BUCKET_NAME }}
    #       destination_dir: /

    #   # Invalidate CloudFront cache (optional)
    #   - name: Invalidate CloudFront cache
    #     uses: awact/cloudfront-action@v1.3
    #     with:
    #       aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       distribution_id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
    #       paths: "/*"

    # Install AWS CLI
    #   - name: Install AWS CLI
    #     run: |
    #       sudo apt-get update
    #       sudo apt-get install -y awscli

    #   # Invalidate CloudFront cache
    #   - name: Invalidate CloudFront cache
    #     run: |
    #       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #       aws configure set default.region us-east-1
    #       aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
